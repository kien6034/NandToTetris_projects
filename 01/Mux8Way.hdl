// Used in Mux8Way16
/**
 * 8-way multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way {
    IN a, b, c, d,
       e, f, g, h,
       sel[3];
    OUT out;

    PARTS: 

    Not (in=sel[0], out=notsel0);
    Not (in=sel[1], out=notsel1);
    Not (in=sel[2], out=notsel2);

    And (a=notsel0, b=notsel1, out=sel00);
    And (a=sel[0], b=notsel1, out=sel01);
    And (a=notsel0, b=sel[1], out=sel10);
    And (a=sel[0], b=sel[1], out=sel11);

    And (a=sel00, b=notsel2, out=sel000);
    And (a=sel01, b=notsel2, out=sel001);
    And (a=sel10, b=notsel2, out=sel010);
    And (a=sel11, b=notsel2, out=sel011);
    And (a=sel00, b=sel[2], out=sel100);
    And (a=sel01, b=sel[2], out=sel101);
    And (a=sel10, b=sel[2], out=sel110);
    And (a=sel11, b=sel[2], out=sel111);

    And (a=a, b=sel000, out=w1);
    And (a=b, b=sel001, out=w2);
    And (a=c, b=sel010, out=w3);
    And (a=d, b=sel011, out=w4);
    And (a=e, b=sel100, out=w5);
    And (a=f, b=sel101, out=w6);
    And (a=g, b=sel110, out=w7);
    And (a=h, b=sel111, out=w8);

    Or (a=w1, b=w2, out=w1orw2);
    Or (a=w3, b=w4, out=w3orw4);
    Or (a=w5, b=w6, out=w5orw6);
    Or (a=w7, b=w8, out=w7orw8);

    Or (a=w1orw2, b=w3orw4, out=resultA);
    Or (a=w5orw6, b=w7orw8, out=resultB);

    Or (a=resultA, b=resultB, out=out);
}
